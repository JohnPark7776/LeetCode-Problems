class Solution:
class Solution:
  """
  Runtime: 29 ms (Beats 81.72%)
  Memory: 13.9 MB (Beats 23.61%)
  """
  def spiralOrder(self, matrix: List[List[int]]) -> List[int]:
      if len(matrix[0]) == 1:
          return [i[0] for i in matrix]
      elif len(matrix) == 1:
          return matrix[0]
      up = 1
      left = 0
      right = len(matrix[0])-1
      down = len(matrix)-1
      l,r,u,d = False,True,False,False
      x = 0
      y = 1
      visited = {(0,0)}
      ans = [matrix[0][0]]
      while True:
          while r:
              if (x,y) in visited:
                  return ans
              visited.add((x,y))
              ans.append(matrix[x][y])
              if y < right:
                  y += 1
              else:
                  r = False
                  d = True
                  x += 1
                  right -= 1
          while d:
              if (x,y) in visited:
                  return ans
              visited.add((x,y))
              ans.append(matrix[x][y])
              if x < down:
                  x += 1
              else:
                  d = False
                  l = True
                  y -= 1
                  down -= 1
          while l:
              if (x,y) in visited:
                  return ans
              visited.add((x,y))
              ans.append(matrix[x][y])
              if y > left:
                  y -= 1
              else:
                  l = False
                  u = True
                  x -= 1
                  left += 1
          while u:
              if (x,y) in visited:
                  return ans
              visited.add((x,y))
              ans.append(matrix[x][y])
              if x > up:
                  x -= 1
              else:
                  u = False
                  r = True
                  y += 1
                  up += 1
